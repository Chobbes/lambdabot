INSTALL:

You'll need GHC >= 6.4.

If your Cabal isn't recent (i.e. it's only 1.0) then bulid a newer
Cabal (instructions in the Cabal README file), which lives at:
        $ darcs get http://cvs.haskell.org/darcs/cabal

Build the FastPackedString library:
        $ darcs get --partial http://www.cse.unsw.edu.au/~dons/code/fps
        $ cd fps
        $ ln -s fps.cabal.no-mmap fps.cabal
        $ runhaskell Setup.hs configure --prefix=/home/dons
        $ runhaskell Setup.hs build
        $ runhaskell Setup.hs install

And then build lambdabot:
        $ cd ..
        $ darcs get --partial http://www.cse.unsw.edu.au/~dons/code/lambdabot
        $ cd lambdabot/
        $ autoconf
        $ ./configure
        -- edit Config.hs to your requirements
        $ make          # you could try -j2
        $ ./lambdabot

After this, you'll notice some of the plugins don't seem to work. They
require extra local files. For example, @hoogle needs the 'hoogle'
binary to be installed in the path, @yow needs a fortune file directory,
@code needs fptools. This will be fixed eventually, but for now read the
src of the broken plugin to find out what files it requires.

Plugins are added or removed config.mk and removing them from the list
of PLUGINS.

For compiling with profiling on:

    make way=p

To compile a dynamic version, with reloadable plugins:

    Build hs-plugins:
        $ cd ..
        $ darcs get --partial http://www.cse.unsw.edu.au/~dons/code/hs-plugins
        $ cd hs-plugins/
        $ chmod +x Setup.lhs configure
        $ ./Setup.lhs configure --prefix=/usr/local
        $ ./Setup.lhs build
        $ ./Setup.lhs install

    Then
        $ make dynamic=yes

To build really quickly, for testing:

    make way=fast

For cleaning, use:
    make clean
or
    make distclean

to clean the tree.

CONNECTING:
    ./lambdabot --online

OFFLINE MODE:
    ./lambdabot

SCRIPTS:
    The scripts directory contains some shell scripts for Vim editor support
    They are self-explanatory

KNOWN BUGS:

Bug reports, patches, new modules etc, contact:

	Don Stewart <dons@cse.unsw.edu.au>
	aka dons on #haskell

REPOSITORY:

Our darcs repository is located at:
    http://www.cse.unsw.edu.au/~dons/lambdabot
    http://www.ScannedInAvian.org/repos/lambdabot

CONTRIBUTING:

Use 'darcs send' to submit patches to dons. Add yourself to the AUTHORS
file if you haven't already.
