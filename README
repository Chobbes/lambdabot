 _                   _          _         _             _
/ \                 / |        | \       / |           | \_
| |    ___ _  _ _ _ | \__    __/ | ___ _ | \__   ____  |  _|
| |   /  _` || ` ` ||  _ \  / _  |/  _` ||  _ \ /  _ \ | |
| \__ | |_| || | | || |_| || |_| || |_| || |_| || |_| || \__
\____|\___,_/|_|_|_|\____/  \____/\___,_/\____/ \____/ \____|

BUILDING:

You'll need GHC >= 6.6

You need the zlib library:
    http://hackage.haskell.org/cgi-bin/hackage-scripts/package/zlib

Build with cabal (simple)
    $ vi Config.hs
    $ ./build
    $ ./lambdabot { -e command }

If the ./Setup.hs step doesn't seem to like the cabal file, you likely
need to install an updated version of Cabal:
    $ cd $place_you_want_to_put_cabal
    $ darcs get http://darcs.haskell.org/cabal
    $ cd Cabal
    $ runghc -cpp Setup configure && runghc -cpp Setup build
    # runghc -cpp Setup install

Note: If you want lambdabot to be able to evaluate expressions
(e.g., "> 1 + 1" evaluates to 2) then you'll need hs-plugins and also
before './Setup.hs configure --bindir=`pwd`' you need to copy
lambdabot.cabal.plugins to lambdabot.cabal.

Or with ghci (fastest turn around). But first you have to build with
cabal as above anyway. So this is mostly for development purposes.
    $ vi Config.hs
    $ sh configure
    $ sh ghci Main.hs
then
    *Main> main
or
    *Main> online <list>
where <list> is a list of commands to execute, as with -e.

OFFLINE MODE:
    ./lambdabot

CONNECTING:
    ./lambdabot -e 'rc online.rc'

SSL MODE (with stunnel):

append the following to your stunnel.conf
    client = yes
    [irc]
    accept = 6667
    connect = ssl-irc-server.org:6667

and edit online.rc to use localhost as server, then restart the stunnel
server and restart lambdabot with:

    ./lambdabot -e 'rc online.rc'

SCRIPTS:
    The scripts directory contains some shell scripts for Vim editor support
    They are self-explanatory

BUGS:

Bug reports, patches, new modules etc, contact:

        Cale Gibbard <cgibbard@gmail.com>
        aka cale on #haskell

REPOSITORY:

Our darcs repository is located at:
    http://code.haskell.org/lambdabot

CONTRIBUTING:

Use 'darcs send' to submit patches to Cale. Add yourself to the AUTHORS
file if you haven't already.
