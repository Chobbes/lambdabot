Generate multiple function clauses instead of case?

Simplify proofs more:
  split where no variables used can be removed
  either with equal RHS can me merged
  "case e of p -> p"

Translate non-recursive data types into n-ary sums and products.

Do eta reduction during conversion to Haskell.

Kind check given types.

Type check the proof terms against the formula.

Switch to Herbelin's LJT to generate all proofs?
