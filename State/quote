##C++
 haskell == plain english ??
[asking about C++ rules] vincenz: how should we know what those rules mean ?

<basti_>
Snow doeth lay upon the lands. Even with cunning newtype; deriving the newtype is recursive. Great leaders brings less pain.

Alanna
Saying that Java is nice because it works on all OS's is like saying that anal sex is nice because it works on all genders.

Cale
The perfect programming language is mathematics, but that only runs on mathematicians.
Beware of the function [a] -> a. For it may contain trappes and sprynges of great variety and harm.

ChilliX
You need to seek a balance between category theory and VLSI

ChrisKuklewicz
Are there little known Haskell idioms for doing math? Is there an undocumented -funleash-fortran parameter?

ChristopherHendrie
Sometimes I wonder if Java will be indirectly responsible for hastening the adoption of functional programming languages

DukeDave
what, if your kids start doing drugs? or worse, business school

Gahhh
monads are usually a personal experience.

HavocPennington
Haskell is the least-broken programming language available today.

Heffalump
docs aren't all that useful, generally
CPP leads to suffering

Igloo
[dons: anyone know what happened to [the] Haskell wishlist?]  Igloo: Did it have "Crush Java" listed?

Itkovian
real programmers don't write docs, if it was hard to write, it should be hard to understand

JaffaCake
not all IOError -> String functions are created equal :)
I'm afraid I'm completely IA64-ignorant (and hoping to remain that way until IA64 goes away :-)

JohnMeacham
There will also be a karaoke competition to determine the fate of the monomorphism restriction.
Type theory makes totally awesome material for bar room shit talk.
Last night I was at this dive bar listening to live music and there was this cute girl I was talking too while this guy was there, we started ribbing each other in the appropriate way when confronted with the situation of two guys talking to the same girl, and our jeers eventually turned technical until we were arguing about haskell, perl, and pugs development. it turning out he was one of the pugs de

Korollary
an olegweek is a complex entity with an imaginary part
an olegweek is a complex entity with an imaginary part

Lemmih
calling an out-of-scope function isn't as easy as I had hoped

Oleg
The implementation of RSA on type level is left for future work

PaulGraham
An algorithm for lazy evaluation of research papers: Just write whatever you want and don't cite any previous work, and indignant readers will send you references to all the papers you should have cited.
I get the impression that using [Haskell] would feel like reading a novel written by a literary critic.

Philippa
hey, if the guy wants a monadectomy that's his choice

Pseudonym
I think principal types are overrated
Lazy evalution is really, really trippy.
Well, personally, I don't think dumb people should be let near a programming language.

S.Behrens
or maybe she is the Queen of Sciences and he is the Mack Daddy.
Computer science is the womanizer, and math is the pure-hearted girl he won't call the next day.

SamB
Because sliced bread gives horribly uninformative error messages?
C is a good language. If what you want is an assembly language where you can't be sure what anything does
fworp: next time, load your shirt up in to GHCi *before* having it printed
Boy, point-free Arrows are worse than Forth...

SebastianHanowski
I tried to formalise a proof of rev (rev l)  = l i found in W. Kluges book "Abstract Computing Machines - A Lambda Calculus Perspective" which is pretty much a 'Pimp My Ride' for SECD-machines.

SyntaxNinja
I think that the compiler authors will fly here from England just to kill me if I did that

Taral
But I can do DP in C, which has no RT
How do you add an @quote?

TuringTest
They got it work in Haskell without understanding Haskell.  It is quite an achievement, of some description.

adept
Tried to co-read and co-understand comonads, but got co-re dump
I think I need cobrain to understand coeffects

astrolabe
I put my thing in inverted commas because it isn't a really stalactite, but it looks like one, and contains nitrates from urea.

autrijus
Mechanical and super-natty! Inspect the result and *if* happy; freeze, sell and get some sleep!
Woot. I got larry wall started learning Haskell ;)
Parrot is fine except every time I build it, it fails
Well, ever since the monadic revolution of '98 Haskell people have started to do real world apps

blackdog
My variables aren't varying.
I'm not encouraged by the comment "i don't know haskell, but CL is much better", though. it doesn't suggest careful thought and objectivity...

chromatic
My productivity increased when Autrijus told me about Haskell's trace function. He called it a refreshing desert in the oasis of referential transparency.

cjs
I have to explain this shit to people. I mean, I start out right, "Hey, you know how you always have these bugs because what you thought was in the variable is not there?" And I get all of these nods of agreement. "Well, I've found a new language that solves that problem." Audience: "Ooooh! How?" Me: "There's no variables!" And then they all start moving away from me slowly....

darius
Well profiling does add a bit of reflection, but it should have the good sense not too go near the barbed wire fences and armed guards.
I imagine XSLT programmers say "It's a one pager" the way most other programmers say "It's a one liner".

dcnstrct
even the #lisp people say go with haskell

desrt
man... there's this whole dark side to haskell that dr. kahl didn't teach us in 3e03

dons
Haskell: The language that never sells out!
ihope reaches level 4 hacker
note to self: grep only works on disks
but let is more lazy ;)
who was it who said (shapr?) that they welcome their competitors using languages other than haskell? it's a bad sign if your enemies start coding in haskell!
the type system is *great* for coding while sleepy.. you just hack any garbage together, and let the type checker deal with it
boegel, stop polluting the quote-space please
I don't mind autoconf, except for the fact that it's stupid and ugly

gFunk
[the main advantage of functional programs are that they're] incorrect the first 1000 times you try to compile it!

ghc
ld64: INFO    171: Multigot invoked. Gp relative region broken up into 2 separate regions.
ld64: WARNING 47 : This module contains branch instruction(s) that might degrade performance on an R4000 processor.
Unable to mmap( MAP_FIXED ) for Jump Islands
Only unit numeric type pattern is valid
yi-static: internal error: TSO object entered!
deadlock: main thread blocked in a strange way
Bad eta expand
GHCi's bytecode generation machinery can't handle 64-bit code properly yet.
Malformed predicate
Can't happen
accepting non-standard pattern guards (-fglasgow-exts to suppress this message)
Bindings in hs-boot files are not allowed
Pattern bindings (except simple variables) not allowed in instance declarations
Simplifier reached fixed point
In a RHS constructor application, con type doesn't match arg types
In a case expression, type of scrutinee does not match patterns
Offending Program
WARNING: SE CAFs unsupported, forcing UPD instead
Interesting!  A join var that isn't let-no-escaped
Oops!  Entered absent arg
absApply: Duff function
TELL SIMON: evalAbsence
panic! (the `impossible' happened, GHC version 6.4)
For basic information, try the `--help' option.
magic number mismatch: old/corrupt interface file?
Exotic pattern inside meta brackets
Can't represent a guarded lambda in Template Haskell
Exotic Stmt in meta brackets
Can't represent Oxford brackets
Can't represent explicit kind signatures yet
DsExpr.dsExpr: Infinite parallel array!
GHC error in desugarer lookup
Cannot desugar this Template Haskell declaration
foreign declaration uses deprecated non-standard syntax
CPR Analysis tried to take the lub of a function and a tuple
GHC's heap exhausted
GHC stack-space overflow
Precedence out of range
Empty record update
Type signature given for an expression
Qualified name in function definition
Malformed context in instance header
parse error in data/newtype declaration
Type found where type variable expected
Malformed context in type or class declaration
parse error on input
lexical error in string/character literal
primitive string literal must contain only characters <= '\\\\xFF\\'
invalid character
PArse error (possibly incorrect indentation)
Can't match unequal length lists
Kind error
Cannot unify a type variable with a type scheme
Unexpected kind unification failure
Use -fglasgow-exts to allow GADTs
Data constructor does not return its parent type
Can't combine named fields with locally-quantified type variables or context
Cycle in class declarations (via superclasses)
Cycle in type synonym declarations
Generic method type is too complex
Use -fglasgow-exts to allow multi-parameter classes
Too many parameters for class
No parameters for class
Use -fcontext-stack20 to increase stack size to (e.g.) 20
Use -fallow-incoherent-instances
Implicit parameters escape from the monomorphic top-level binding(s)
Splices are not allowed in hs-boot files
Inaccessible case alternative
A lazy (~) pattern connot bind existential type variables
Non-type variables in constraint
All of the type variables in the constraint are already in scope (at least one must be universally quantified here)
At least one of the forall'd type variables mentioned by the constraint must be reachable from the type after the '=>'
Ambiguous constraint
Kind signature on data type declaration has non-* return kind
Malformed constructor signature
Illegal deriving item
does not have the required strict field(s)
No constructor has all these fields
Urk infer
You need -fglasgow-exts to derive an instance for this class
Try -fglasgow-exts for GHC's newtype-deriving extension
Multiple default declarations
All the type patterns for a generic type constructor must be identical
More than one type pattern for a single generic type constructor
No explicit method nor default method
falls under the monomorphism restriction
Illegal overloaded type signature(s)
bindings for unlifted types aren't allowed
Command stack underflow at command
Duplicate instance declarations
internal error: scavenge_mark_stack: unimplemented/strange closure type -1368815400 @ 0x2aaaae6981f8
My brain just exploded.
internal error: Invalid object in processHeapClosureForDead
Urk! Inventing strangely-kinded void TyCon: ZCt{tc a2AN} (* -> *) -> * -> *
parse error (possibly incorrect indentation)
Inferred type is less polymorphic than expected
Kind error
Occurs check: cannot construct the infinite type
Occurs check: cannot construct the infinite kind
Can't reify a non-Haskell-98 data constructor
Illegal polymorphic type signature in pattern
Illegal unlifted type argument
Illegal polymorphic type
The instance types do not agree with the functional dependencies of the class
Unexpected strictness annotation
Unexpected type splice
Can't splice the polymorphic local variable
On Alpha, I can only handle 4 non-floating-point arguments to foreign export dynamic
GHC internal error
GHC stage restriction
the eta-reduction property does not hold
even with cunning newtype deriving the newtype is recursive
Can't mix generic and non-generic equations for class method
The signature contexts in a mutually recursive group should all be identical
Functional dependencies conflict between instance declarations
There must be at least one non-type-variable in the instance head
Illegal constraint
Illegal unboxed tuple type as function argument
Kinds don't match in type application
From-type of Coerce differs from type of enclosed expression
foreign declaration uses deprecated non-standard syntax
Illegal binding of built-in syntax
Duplicate binding in parallel list comprehension
Implicit-parameter bindings illegal in a parallel list comprehension
adjustor creation not supported on this platform
eval_thunk_selector: strange selectee
scavenge: unimplemented/strange closure type
scavenge_stack: weird activation record found on stack
Info table already?
ARGH! Jump uses %esi or %edi with -monly-2-regs

gzl
[on why monads are scary] maybe it's because people look up monad on wikipedia, find the category theory page, and crap themselves

hakko
most programmers have a lot of religious issues about their work, yes.

ihope
Laziness is free, but it doesn't always pay off.

jjuggle
I was riding around town and this cop on patrol on a bike rode up next to me and said, "There's always a show off." I offered to teach him to ride and help set up a unicycle patrol squad, but he declined.

jlouis
Q: When does one know he has programmed too much Haskell? A: When he uses == and /= in everyday IRC chat or when he tries to fix a relationship by passing himself as a continuation

joelr
the learning curve is far steeper with Haskell but it is far more elegant and readable
Fundeps, existential types, HList take a while to grasp

kolmodin
I would rather lose my left arm than write it in Java

kzm
My program contains a bug.  How ungrateful, after all I've done for it.

lambdabot
Occurs check: cannot construct the infinite type: a
Couldn't match kind `?? -> ? -> *' against `(* -> *) -> * -> *'
Of course i'm female
lambdabot hasn't said anything memorable

lispy
I just remembered this dream i had the other morning.  I was trying to tell my alarm clock how to snooze by using a list comprehension

malcolm
I don't believe you need to invoke the full awesome majesty of Template Haskell
Most software doesn't need to be fast.  But all software needs a fighting chance of correctness

mattam
[Monads are] much more elegant [than soccer] in general.

mikaeli
hmm, one national tv station I was watching while eating breakfast crashed with bsod. I guess that's what you get for running windows in production use
My friend bought a new laptop; it had MSBLASTER preinstalled. I couldn't believe it either and installed XP and the apps many times, run virus killers and everytime the blaster came back. Everything was packed on a rescue cd. And virus was in m$ works installation files.

musasabi
<musasabi> no reason to reinvent the whole wheel  <musasabi> (usually reinvented wheels end up square)

mwc
I actually got away with running Haskell through a TeX pretty printer and handing it in as pseudocode

ndm
the only language i've seen which is ugly at a deeper level than syntax is perl

pesco
"Scientists Reveal: Human Consciousness Stems From Two Files in Different Directories!"

reddi
and now i know: IT DOES NOT WORK ALWAYS ;-)

samc
monads are hard, let's go shopping

sethk
it's certainly true that you can clobber the stack in C without even getting out of bed in the morning

shapr
Programming is the Magic Executable Fridge Poetry, it is machines made of thought, fueled by ideas.
The legal system is the ultimate denial of service attack.
I don't know why the GHC team won't accept my spoonIO patch
I've toked on so many lambdas I'm getting dependent types
Anyway, I'm just a walking index into the Haskell world. I can tell you a little bit about many things, but I will quickly forward you to the experts for more detail.
I am hexed and vexed ;-)
Academics are continually chewing pieces off of impossible and making them merely difficult.
Windows users are like the wives of alcoholics, they'll take any amount of abuse and come right back.
I encourage my competitors to use Windows.
GHC has more flags than the UN
I've tried to teach people autodidactism, but I've realized they have to learn it for themselves.

skew
We don't believe in constant factors.
Swapping is just a constant factor
I think blackdog is right

tennin
[very #haskell] anyone know of any good books/papers on the application of category theory to databases?

tomasz
After all, return is only a fancy name for liftM0 :-)

twb
But, I love my job. It's like being in a rock band. i.e. no pay, but fun.

vegai
Hey Haskell! Give me that File! -Naah, I'm too lazy. *thinks* I'll give you a cookie if you tell me how many letters that file has! -Oh, ok!

vixen
If you see this, gentle sir, know that you are being trolled by a poorly configured VixenLove program

wilx
I mean, besides the murders, it all looks so nice.

xahlee
The Haskell Logo is the perfection of logos

xerox
> take 10 lol where lol = "ol" : zipWith (:) (intersperse 'o' $ cycle "l") lol
you know, befunge is probably the only language I've seen where you can run code pasted from IRC with the <nick> tags still in place ;-)

