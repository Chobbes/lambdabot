("",[""])
("<basti_>",["\"Snow doeth lay upon the lands. Even with cunning newtype; deriving the newtype is recursive. Great leaders brings less pain.\""])
("Alanna",["Saying that Java is nice because it works on all OS's is like saying that anal sex is nice because it works on all genders."])
("ChristopherHendrie",["Sometimes I wonder if Java will be indirectly responsible for hastening the adoption of functional programming languages by providing a caricature of procedural OO.","Sometimes I wonder if Java will be indirectly responsible for hastening the adoption of functional programming languages"])
("Gahhh",["monads are usually a personal experience."])
("HavocPennington",["Haskell is the least-broken programming language available today."])
("Heffalump",["CPP leads to suffering"])
("JaffaCake",["I'm afraid I'm completely IA64-ignorant (and hoping to remain that way until IA64 goes away :-)"])
("Pseudonym",["Lazy evalution is really, really trippy.","Well, personally, I don't think dumb people should be let near a programming language."])
("SamB",["boy, point-free Arrows are worse than Forth..."])
("SyntaxNinja",["I think that the compiler authors will fly here from england just to kill me if I did that"])
("autrijus",["Mechanical and super-natty! Inspect the result and *if* happy; freeze, sell and get some sleep!","woot. I got larry wall started learning Haskell ;)","Parrot is fine except every time I build it, it fails","Well, ever since the monadic revolution of '98 Haskell people have started to do real world apps"])
("blackdog",["my variables aren't varying.","i'm not encouraged by the comment \"i don't know haskell, but CL is much better\", though. it doesn't suggest careful thought and objectivity..."])
("darius",["Well profiling does add a bit of reflection, but it should have the good sense not too go near the barbed wire fences and armed guards.","I imagine XSLT programmers say \"It's a one pager\" the way most other programmers say \"It's a one liner\"."])
("desrt",["man... there's this whole dark side to haskell that dr. kahl didn't teach us in 3e03"])
("dons",["I don't mind autoconf, except for the fact that it's stupid and ugly"])
("ghc",["deadlock: main thread blocked in a strange way","Bad eta expand","GHCi's bytecode generation machinery can't handle 64-bit code properly yet.","Malformed predicate","Can't happen","accepting non-standard pattern guards (-fglasgow-exts to suppress this message)","Bindings in hs-boot files are not allowed","Pattern bindings (except simple variables) not allowed in instance declarations","Simplifier reached fixed point","In a RHS constructor application, con type doesn't match arg types","In a case expression, type of scrutinee does not match patterns","Offending Program","WARNING: SE CAFs unsupported, forcing UPD instead","Interesting!  A join var that isn't let-no-escaped","Oops!  Entered absent arg","absApply: Duff function","TELL SIMON: evalAbsence","panic! (the `impossible' happened, GHC version 6.4)","For basic information, try the `--help' option.","magic number mismatch: old/corrupt interface file?","Exotic pattern inside meta brackets","Can't represent a guarded lambda in Template Haskell","Exotic Stmt in meta brackets","Can't represent Oxford brackets","Can't represent explicit kind signatures yet","DsExpr.dsExpr: Infinite parallel array!","GHC error in desugarer lookup","Cannot desugar this Template Haskell declaration","foreign declaration uses deprecated non-standard syntax","CPR Analysis tried to take the lub of a function and a tuple","GHC's heap exhausted","GHC stack-space overflow","Precedence out of range","Empty record update","Type signature given for an expression","Qualified name in function definition","Malformed context in instance header","parse error in data/newtype declaration","Type found where type variable expected","Malformed context in type or class declaration","parse error on input","lexical error in string/character literal","primitive string literal must contain only characters <= '\\\\xFF\\'","invalid character","parse error (possibly incorrect indentation)","Can't match unequal length lists","Kind error","Cannot unify a type variable with a type scheme","Unexpected kind unification failure","Use -fglasgow-exts to allow GADTs","Data constructor does not return its parent type","Can't combine named fields with locally-quantified type variables or context","Cycle in class declarations (via superclasses)","Cycle in type synonym declarations","Generic method type is too complex","Use -fglasgow-exts to allow multi-parameter classes","Too many parameters for class","No parameters for class","Use -fcontext-stack20 to increase stack size to (e.g.) 20","Use -fallow-incoherent-instances","Implicit parameters escape from the monomorphic top-level binding(s)","Splices are not allowed in hs-boot files","Inaccessible case alternative","A lazy (~) pattern connot bind existential type variables","Non-type variables in constraint","All of the type variables in the constraint are already in scope (at least one must be universally quantified here)","At least one of the forall'd type variables mentioned by the constraint must be reachable from the type after the '=>'","Ambiguous constraint","Kind signature on data type declaration has non-* return kind","Malformed constructor signature","Illegal deriving item","does not have the required strict field(s)","No constructor has all these fields","Urk infer","You need -fglasgow-exts to derive an instance for this class","Try -fglasgow-exts for GHC's newtype-deriving extension","Multiple default declarations","All the type patterns for a generic type constructor must be identical","More than one type pattern for a single generic type constructor","No explicit method nor default method","falls under the monomorphism restriction","Illegal overloaded type signature(s)","bindings for unlifted types aren't allowed","Command stack underflow at command","Duplicate instance declarations","internal error: scavenge_mark_stack: unimplemented/strange closure type -1368815400 @ 0x2aaaae6981f8","My brain just exploded.","internal error: Invalid object in processHeapClosureForDead","Urk! Inventing strangely-kinded void TyCon: ZCt{tc a2AN} (* -> *) -> * -> *","parse error (possibly incorrect indentation)","Inferred type is less polymorphic than expected","Kind error","Occurs check: cannot construct the infinite type","Occurs check: cannot construct the infinite kind","Can't reify a non-Haskell-98 data constructor","Illegal polymorphic type signature in pattern","Illegal unlifted type argument","Illegal polymorphic type","The instance types do not agree with the functional dependencies of the class","Unexpected strictness annotation","Unexpected type splice","Can't splice the polymorphic local variable","On Alpha, I can only handle 4 non-floating-point arguments to foreign export dynamic","GHC internal error","GHC stage restriction","the eta-reduction property does not hold","even with cunning newtype deriving the newtype is recursive","Can't mix generic and non-generic equations for class method","The signature contexts in a mutually recursive group should all be identical","Functional dependencies conflict between instance declarations","There must be at least one non-type-variable in the instance head","Illegal constraint","Illegal unboxed tuple type as function argument","Kinds don't match in type application","From-type of Coerce differs from type of enclosed expression","foreign declaration uses deprecated non-standard syntax","Illegal binding of built-in syntax","Duplicate binding in parallel list comprehension","Implicit-parameter bindings illegal in a parallel list comprehension","adjustor creation not supported on this platform","eval_thunk_selector: strange selectee","scavenge: unimplemented/strange closure type","scavenge_stack: weird activation record found on stack","Info table already?","ARGH! Jump uses %esi or %edi with -monly-2-regs"])
("hakko",["most programmers have a lot of religious issues about their work, yes."])
("jjuggle",["I was riding around town and this cop on patrol on a bike rode up next to me and said, \"There's always a show off.\" I offered to teach him to ride and help set up a unicycle patrol squad, but he declined."])
("jlouis",["Q: When does one know he has programmed too much Haskell? A: When he uses == and /= in everyday IRC chat or when he tries to fix a relationship by passing himself as a continuation"])
("kzm",["My program contains a bug.  How ungrateful, after all I've done for it."])
("lispy",["i just remembered this dream i had the other morning.  I was trying to tell my alarm clock how to snooze by using a list comprehension"])
("mattam",["[Monads are] much more elegant [than soccer] in general."])
("pesco",["\"Scientists Reveal: Human Consciousness Stems From Two Files in Different Directories!\""])
("reffie",["yi is clearly the editor of the future."])
("samc",["monads are hard, let's go shopping"])
("shapr",["Academics are continually chewing pieces off of impossible and making them merely difficult.","Windows users are like the wives of alcoholics, they'll take any amount of abuse and come right back.","I encourage my competitors to use Windows.","GHC has more flags than the UN","I've tried to teach people autodidactism, but I've realized they have to learn it for themselves."])
("skew",["We don't believe in constant factors.","swapping is just a constant factor","I think blackdog is right"])
("tromp",["the number of 13x13 go positions is 37249792307686396442294904767024517674249157948208717533254799550970595875237705"])
("trompthe",["number of 13x13 go positions is 37249792307686396442294904767024517674249157948208717533254799550970595875237705"])
